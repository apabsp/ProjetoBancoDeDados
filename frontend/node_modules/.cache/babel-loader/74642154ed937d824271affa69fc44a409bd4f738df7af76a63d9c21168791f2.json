{"ast":null,"code":"var _jsxFileName = \"C:\\\\gits\\\\bancoDeDados\\\\ProjetoBancoDeDados\\\\frontend\\\\src\\\\components\\\\ObraForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ObraForm = () => {\n  _s();\n  const [obra, setObra] = useState({\n    nome: '',\n    ano: '',\n    genero: ''\n  });\n  const [mensagem, setMensagem] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setObra({\n      ...obra,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/api/obras', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(obra)\n      });\n      if (!response.ok) {\n        throw new Error('Erro ao cadastrar obra');\n      }\n      const data = await response.text();\n      setMensagem(`‚úÖ Sucesso: ${data}`);\n      setObra({\n        nome: '',\n        ano: '',\n        genero: ''\n      }); // limpa formul√°rio\n    } catch (error) {\n      setMensagem(`‚ùå Erro ao conectar com o backend: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCD8 Cadastrar Obra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"nome\",\n      placeholder: \"Nome da obra\",\n      value: obra.nome,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"ano\",\n      placeholder: \"Ano de publica\\xE7\\xE3o\",\n      value: obra.ano,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"genero\",\n      placeholder: \"G\\xEAnero\",\n      value: obra.genero,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u2795 Adicionar Obra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ObraForm, \"pI2t0lchiEYzBVtLR1Ga/NWady8=\");\n_c = ObraForm;\nexport default ObraForm;\nvar _c;\n$RefreshReg$(_c, \"ObraForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ObraForm","_s","obra","setObra","nome","ano","genero","mensagem","setMensagem","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","text","error","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/gits/bancoDeDados/ProjetoBancoDeDados/frontend/src/components/ObraForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ObraForm = () => {\r\n  const [obra, setObra] = useState({\r\n    nome: '',\r\n    ano: '',\r\n    genero: ''\r\n  });\r\n\r\n  const [mensagem, setMensagem] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setObra({ ...obra, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/obras', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(obra)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Erro ao cadastrar obra');\r\n      }\r\n\r\n      const data = await response.text();\r\n      setMensagem(`‚úÖ Sucesso: ${data}`);\r\n      setObra({ nome: '', ano: '', genero: '' }); // limpa formul√°rio\r\n    } catch (error) {\r\n      setMensagem(`‚ùå Erro ao conectar com o backend: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>üìò Cadastrar Obra</h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"nome\"\r\n        placeholder=\"Nome da obra\"\r\n        value={obra.nome}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"number\"\r\n        name=\"ano\"\r\n        placeholder=\"Ano de publica√ß√£o\"\r\n        value={obra.ano}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"genero\"\r\n        placeholder=\"G√™nero\"\r\n        value={obra.genero}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\">‚ûï Adicionar Obra</button>\r\n\r\n      {mensagem && <p>{mensagem}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ObraForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}